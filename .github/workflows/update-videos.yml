name: Update F1 Videos

on:
  schedule:
    # Run every 30 minutes during F1 race weekends (Friday-Monday)
    # Friday: 0-23 hours
    - cron: '*/30 * * * 5'
    # Saturday: 0-23 hours  
    - cron: '*/30 * * * 6'
    # Sunday: 0-23 hours
    - cron: '*/30 * * * 0'
    # Monday: 0-12 hours (for post-race content)
    - cron: '*/30 0-12 * * 1'
  workflow_dispatch: # Allow manual trigger
    inputs:
      reason:
        description: 'Reason for manual update'
        required: false
        default: 'Manual update requested'
        type: string
      force_update:
        description: 'Force update even if no new videos found'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main ]

jobs:
  update-videos:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow writing to repository
      actions: read    # Allow reading workflow info
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Fetch latest videos
      env:
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        MANUAL_RUN: ${{ github.event_name == 'workflow_dispatch' }}
        UPDATE_REASON: ${{ github.event.inputs.reason || 'Scheduled update' }}
      run: |
        echo "🚀 Starting F1 video fetch..."
        echo "Reason: $UPDATE_REASON"
        npm run fetch
      
    - name: Commit and push changes
      run: |
        # Configure git with GitHub Actions bot
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Add the videos.json file
        git add videos.json
        
        # Check if there are changes or if force update is enabled
        if git diff --staged --quiet && [ "${{ github.event.inputs.force_update }}" != "true" ]; then
          echo "✅ No changes to commit"
        else
          # Create appropriate commit message
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            COMMIT_MSG="🏎️ Manual F1 video update - ${{ github.event.inputs.reason || 'Manual update' }} ($(date))"
          else
            COMMIT_MSG="🔄 Auto F1 video update - $(date)"
          fi
          
          echo "📝 Committing with message: $COMMIT_MSG"
          git commit -m "$COMMIT_MSG"
          
          echo "🚀 Pushing changes..."
          git push origin HEAD:${{ github.ref_name }}
          echo "✅ Changes committed and pushed successfully"
        fi
        
    - name: Summary
      run: |
        echo "📊 F1 Video Update Summary"
        echo "=========================="
        
        if [ -f videos.json ]; then
          TOTAL_VIDEOS=$(node -e "const data = require('./videos.json'); console.log(data.totalVideos || 0);")
          WEEKENDS=$(node -e "const data = require('./videos.json'); console.log((data.grandPrixWeekends || []).length);")
          LAST_UPDATED=$(node -e "const data = require('./videos.json'); console.log(data.lastUpdated || 'Unknown');")
          
          echo "📹 Total videos: $TOTAL_VIDEOS"
          echo "🏁 Grand Prix weekends: $WEEKENDS"
          echo "🕒 Last updated: $LAST_UPDATED"
          
          if [ "$WEEKENDS" -gt 0 ]; then
            echo ""
            echo "🏎️ Current weekends:"
            node -e "
              const data = require('./videos.json');
              (data.grandPrixWeekends || []).forEach((gp, i) => {
                const status = i === 0 ? '🔴 Current' : i === 1 ? '🟡 Recent' : '⚪ Past';
                console.log(\`  \${status} \${gp.name} (\${gp.videos.length} videos)\`);
              });
            "
          fi
        else
          echo "❌ No videos.json file found"
        fi